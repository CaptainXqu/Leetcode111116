/*
Given a sorted integer array without duplicates, return the summary of its ranges.
For example, given [0,1,2,4,5,7], return ["0->2","4->5","7"].
*/

public class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> result = new ArrayList<String>();
        if(nums.length == 1){
            result.add(Integer.toString(nums[0]));
            return result;
        }
        int left = 0;
        int right = 0;
        int count = 0;
        
        for(int i=0;i<nums.length;i++){
            if(i==0){
                left = nums[i];
            }
            if(i+1<nums.length && nums[i+1] == nums[i]+1){//equal next
                right = nums[i+1];
                count++;
            }else if(i+1<nums.length && nums[i+1] != nums[i]+1){//Not equal next
                count++;
                if(count == 1){
                    result.add(Integer.toString(nums[i]));
                    count = 0;
                }else if(count > 1){
                    String temp = left + "->" + right;
                    result.add(temp);
                    count = 0;
                }
                left = nums[i+1];
            }else if(i == nums.length-1){
                if(nums[i]==nums[i-1]+1){
                    right = nums[i];
                    String temp = left + "->" + right;
                    result.add(temp);
                }else{
                    result.add(Integer.toString(nums[i]));
                }                    
            }
        }
        return result;
    }
}
